name: Build-Immortalwrt-Release

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * 0

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Clean disk space before build
        run: |
          echo "Cleaning disk space before building immortalwrt firmware..."
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache /opt/pipx /opt/az /opt/microsoft /opt/runner /opt/hostedtoolcache /opt/hostedtoolcache/Python /opt/hostedtoolcache/go /opt/hostedtoolcache/node /opt/hostedtoolcache/Ruby /opt/hostedtoolcache/Java /opt/hostedtoolcache/CodeQL /opt/hostedtoolcache/Swift /opt/hostedtoolcache/PowerShell /opt/hostedtoolcache/Scala /opt/hostedtoolcache/Mono /opt/hostedtoolcache/Perl /opt/hostedtoolcache/Crystal /opt/hostedtoolcache/Elixir /opt/hostedtoolcache/Erlang /opt/hostedtoolcache/Haskell /opt/hostedtoolcache/Julia /opt/hostedtoolcache/Kotlin /opt/hostedtoolcache/OCaml /opt/hostedtoolcache/Php /opt/hostedtoolcache/Rust /opt/hostedtoolcache/Sbt /opt/hostedtoolcache/TypeScript /opt/hostedtoolcache/Vlang /opt/hostedtoolcache/Zig || true
          sudo apt-get clean
          sudo apt-get autoremove -y
          df -h
          echo "Disk space cleaned."

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: ${{ github.ref }}

      - name: Build immortalwrt firmware
        run: |
          echo "Start building immortalwrt firmware..."
          make download -j$(nproc)
          make -j$(nproc)
          echo "Build finished."

      - name: Upload firmware to Release
        uses: softprops/action-gh-release@v1
        with:
          files: "bin/targets/**/*.bin"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
